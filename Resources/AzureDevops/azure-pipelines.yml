variables:
    ArmTemplateRoot: '$(Build.SourcesDirectory)\Resources\ArmTemplates'     
    SolutionBaseName: 'SFA.DFC.TestAutomation'
    BuildPlatform: 'any cpu'
    BuildConfiguration: 'release'
    PublishDriverArguments: '-p:PublishChromeDriver=true -p:PublishGeckoDriver=true'

resources:
  repositories:
  - repository: self

jobs:

#Build and test application
- job: BuildDotNetCore
  displayName: Build-DotNetCore
  pool:
    name: NCS - CI and CD
    demands:
    - msbuild
    - visualstudio

  steps:

  # Publish ContactUs
  - task: DotNetCoreCLI@2
    displayName: 'Publish ContactUs UI tests'
    inputs:
      command: 'publish'
      projects: '$(SolutionBaseName)\SFA.DFC.ContactUs.UITests\SFA.DFC.ContactUs.UITests.csproj'
      arguments: '-o "$(build.artifactstagingdirectory)\$(SolutionBaseName)" $(PublishDriverArguments)'
      publishWebProjects: False
      zipAfterPublish: False

  # Publish Explore Careers
  - task: DotNetCoreCLI@2
    displayName: 'PublishExplore Careers UI tests'
    inputs:
      command: 'publish'
      projects: '$(SolutionBaseName)\SFA.DFC.ExploreCareers.UITests\SFA.DFC.ExploreCareers.UITests.csproj'
      arguments: '-o "$(build.artifactstagingdirectory)\$(SolutionBaseName)" $(PublishDriverArguments)'
      publishWebProjects: False
      zipAfterPublish: False

  # Publish Homepage
  - task: DotNetCoreCLI@2
    displayName: 'Publish Homeage UI tests'
    inputs:
      command: 'publish'
      projects: '$(SolutionBaseName)\SFA.DFC.Homepage.UITests\SFA.DFC.Homepage.UITests.csproj'
      arguments: '-o "$(build.artifactstagingdirectory)\$(SolutionBaseName)" $(PublishDriverArguments)'
      publishWebProjects: False
      zipAfterPublish: False

  # Publish Find a Course
  - task: DotNetCoreCLI@2
    displayName: 'Publish Find a Course UI tests'
    inputs:
      command: 'publish'
      projects: '$(SolutionBaseName)\SFA.DFC.FindACourse.UITests\SFA.DFC.FindACourse.UITests.csproj'
      arguments: '-o "$(build.artifactstagingdirectory)\$(SolutionBaseName)" $(PublishDriverArguments)'
      publishWebProjects: False
      zipAfterPublish: False

  # Publish Skills Assessment
  - task: DotNetCoreCLI@2
    displayName: 'Publish Skills Assessment UI tests'
    inputs:
      command: 'publish'
      projects: '$(SolutionBaseName)\SFA.DFC.SkillsAssessment.UITests\SFA.DFC.SkillsAssessment.UITests.csproj'
      arguments: '-o "$(build.artifactstagingdirectory)\$(SolutionBaseName)" $(PublishDriverArguments)'
      publishWebProjects: False
      zipAfterPublish: False

  # Publish Match Your Skills To Careers
  - task: DotNetCoreCLI@2
    displayName: 'Publish Match Your Skills To Careers UI tests'
    inputs:
      command: 'publish'
      projects: '$(SolutionBaseName)\SFA.DFC.MatchYourSkillsToCareer.UITests\SFA.DFC.MatchYourSkillsToCareer.UITests.csproj'
      arguments: '-o "$(build.artifactstagingdirectory)\$(SolutionBaseName)" $(PublishDriverArguments)'
      publishWebProjects: False
      zipAfterPublish: False

  # Package build output into a zip artifact
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: $(SolutionBaseName)'
    inputs:
      pathtoPublish: $(build.artifactstagingdirectory)\$(SolutionBaseName)\
      artifactName: $(SolutionBaseName)
      publishLocation: container
